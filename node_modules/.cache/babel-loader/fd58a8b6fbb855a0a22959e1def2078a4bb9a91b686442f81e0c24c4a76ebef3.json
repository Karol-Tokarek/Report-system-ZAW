{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karol\\\\Documents\\\\REACT-APP\\\\rep-sys\\\\src\\\\pages\\\\ContactEmail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../App.css';\nimport logo from '../banner.png';\nimport { useLocation } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useFormik } from 'formik';\nimport { saveAs } from 'file-saver';\n// import SaveButton from './SaveFile';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EmailContent() {\n  _s();\n  const onSubmit = data => {\n    console.log(data);\n  };\n  const formik = useFormik({\n    initialValues: {\n      emailNadawcy: '',\n      emailOdbiorcy: '',\n      tresc: ''\n    },\n    onSubmit: values => {\n      console.log(values);\n      fetch('http://localhost:3001/emailSend', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          emailNadawcy: formik.values.emailNadawcy,\n          EMAIL: formik.values.nazwisko\n        })\n      }).then(response => {\n        if (response.ok) {\n          console.log('Dane zostały zapisane!');\n          console.log(JSON.stringify({\n            imie: formik.values.imie,\n            nazwisko: formik.values.nazwisko,\n            klasa: formik.values.klasa\n          }));\n          window.location.reload();\n        } else {\n          throw new Error('Błąd zapisywania danych');\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  });\n  // this.state = {value: 'Wartosc imienia'};\n  // this.handleChange =\n  // this.doChange.bind(target.value);\n  // this.handleSubmit =\n  // this.doSubmit.bind(target.value);\n\n  const loc = useLocation();\n  const {\n    id\n  } = useParams();\n  const {\n    idx,\n    unit,\n    name\n  } = useParams();\n  const [cnt, setCountER] = useState(0);\n  const [formType, setFormType] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      class: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 59\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 64\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Wyslij email (do siebie) \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email nadawcy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"emailNadawcy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email odbiorcy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"emailOdbiorcy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tresc wiadomosci\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"tresc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(EmailContent, \"WR2wAVOqRnUOY2KcD7CXBHB0U9g=\", false, function () {\n  return [useFormik, useLocation, useParams, useParams];\n});\n_c = EmailContent;\nexport default EmailContent;\nvar _c;\n$RefreshReg$(_c, \"EmailContent\");","map":{"version":3,"names":["React","logo","useLocation","useParams","useState","useForm","useFormik","saveAs","axios","jsxDEV","_jsxDEV","EmailContent","_s","onSubmit","data","console","log","formik","initialValues","emailNadawcy","emailOdbiorcy","tresc","values","fetch","method","headers","body","JSON","stringify","EMAIL","nazwisko","then","response","ok","imie","klasa","window","location","reload","Error","catch","error","loc","id","idx","unit","name","cnt","setCountER","formType","setFormType","children","class","src","className","alt","fileName","_jsxFileName","lineNumber","columnNumber","handleSubmit","type","_c","$RefreshReg$"],"sources":["C:/Users/karol/Documents/REACT-APP/rep-sys/src/pages/ContactEmail.js"],"sourcesContent":["import React from 'react';\r\nimport '../App.css';\r\nimport logo from '../banner.png';\r\nimport {  useLocation } from 'react-router-dom';\r\nimport {  useParams } from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useFormik } from 'formik';\r\nimport { saveAs } from 'file-saver';\r\n// import SaveButton from './SaveFile';\r\nimport axios from 'axios';\r\n\r\nfunction EmailContent() {\r\n\r\n    const onSubmit = data => { console.log(data) };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      emailNadawcy: '',\r\n      emailOdbiorcy: '',\r\n      tresc:'',\r\n   \r\n    },\r\n    onSubmit: values => {\r\n\r\n      console.log(values);\r\n      fetch('http://localhost:3001/emailSend', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          emailNadawcy: formik.values.emailNadawcy,\r\n          EMAIL: formik.values.nazwisko,\r\n\r\n        })\r\n      })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('Dane zostały zapisane!');\r\n            console.log(JSON.stringify({\r\n              imie: formik.values.imie,\r\n              nazwisko: formik.values.nazwisko,\r\n              klasa: formik.values.klasa,\r\n        \r\n    \r\n            }));\r\n            window.location.reload();\r\n\r\n          } else {\r\n            throw new Error('Błąd zapisywania danych');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    \r\n  });\r\n  // this.state = {value: 'Wartosc imienia'};\r\n// this.handleChange =\r\n// this.doChange.bind(target.value);\r\n// this.handleSubmit =\r\n// this.doSubmit.bind(target.value);\r\n\r\n\r\n\r\nconst loc = useLocation();\r\nconst { id } = useParams();\r\nconst { idx, unit, name } = useParams();\r\nconst [cnt, setCountER] = useState(0);\r\nconst [formType, setFormType] = useState('');\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <header class=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" /><br/><br/>\r\n        <h2> Wyslij email (do siebie) </h2>\r\n    <form onSubmit={formik.handleSubmit}>\r\n            <label>Email nadawcy</label>\r\n<input type='email' name='emailNadawcy' />\r\n<label>Email odbiorcy</label>\r\n<input type='email' name='emailOdbiorcy' />\r\n<label>Tresc wiadomosci</label><br/>\r\n<textarea name='tresc'></textarea>\r\n<br/><button type=\"submit\">Submit</button>\r\n\r\n</form>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailContent;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,OAAOC,IAAI,MAAM,eAAe;AAChC,SAAUC,WAAW,QAAQ,kBAAkB;AAC/C,SAAUC,SAAS,QAAQ,kBAAkB;AAC7C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,MAAM,QAAQ,YAAY;AACnC;AACA,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EAEpB,MAAMC,QAAQ,GAAGC,IAAI,IAAI;IAAEC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAAC,CAAC;EAChD,MAAMG,MAAM,GAAGX,SAAS,CAAC;IACvBY,aAAa,EAAE;MACbC,YAAY,EAAE,EAAE;MAChBC,aAAa,EAAE,EAAE;MACjBC,KAAK,EAAC;IAER,CAAC;IACDR,QAAQ,EAAES,MAAM,IAAI;MAElBP,OAAO,CAACC,GAAG,CAACM,MAAM,CAAC;MACnBC,KAAK,CAAC,iCAAiC,EAAE;QACvCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBT,YAAY,EAAEF,MAAM,CAACK,MAAM,CAACH,YAAY;UACxCU,KAAK,EAAEZ,MAAM,CAACK,MAAM,CAACQ;QAEvB,CAAC;MACH,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAI;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACflB,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;UACrCD,OAAO,CAACC,GAAG,CAACW,IAAI,CAACC,SAAS,CAAC;YACzBM,IAAI,EAAEjB,MAAM,CAACK,MAAM,CAACY,IAAI;YACxBJ,QAAQ,EAAEb,MAAM,CAACK,MAAM,CAACQ,QAAQ;YAChCK,KAAK,EAAElB,MAAM,CAACK,MAAM,CAACa;UAGvB,CAAC,CAAC,CAAC;UACHC,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;QAE1B,CAAC,MAAM;UACL,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;MACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACd1B,OAAO,CAAC0B,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN;EAEF,CAAC,CAAC;EACF;EACF;EACA;EACA;EACA;;EAIA,MAAMC,GAAG,GAAGxC,WAAW,EAAE;EACzB,MAAM;IAAEyC;EAAG,CAAC,GAAGxC,SAAS,EAAE;EAC1B,MAAM;IAAEyC,GAAG;IAAEC,IAAI;IAAEC;EAAK,CAAC,GAAG3C,SAAS,EAAE;EACvC,MAAM,CAAC4C,GAAG,EAAEC,UAAU,CAAC,GAAG5C,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC6C,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAI1C,oBACEM,OAAA;IAAAyC,QAAA,eAEIzC,OAAA;MAAQ0C,KAAK,EAAC,YAAY;MAAAD,QAAA,gBAC1BzC,OAAA;QAAK2C,GAAG,EAAEpD,IAAK;QAACqD,SAAS,EAAC,UAAU;QAACC,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAAAjD,OAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAAAjD,OAAA;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAC5DjD,OAAA;QAAAyC,QAAA,EAAI;MAA0B;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvCjD,OAAA;QAAMG,QAAQ,EAAEI,MAAM,CAAC2C,YAAa;QAAAT,QAAA,gBAC5BzC,OAAA;UAAAyC,QAAA,EAAO;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACxCjD,OAAA;UAAOmD,IAAI,EAAC,OAAO;UAACf,IAAI,EAAC;QAAc;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC1CjD,OAAA;UAAAyC,QAAA,EAAO;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAC7BjD,OAAA;UAAOmD,IAAI,EAAC,OAAO;UAACf,IAAI,EAAC;QAAe;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,eAC3CjD,OAAA;UAAAyC,QAAA,EAAO;QAAgB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eAAAjD,OAAA;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACpCjD,OAAA;UAAUoC,IAAI,EAAC;QAAO;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAY,eAClCjD,OAAA;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAAAjD,OAAA;UAAQmD,IAAI,EAAC,QAAQ;UAAAV,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEnC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEQ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAAC/C,EAAA,CAlFQD,YAAY;EAAA,QAGJL,SAAS,EAmDdJ,WAAW,EACRC,SAAS,EACIA,SAAS;AAAA;AAAA2D,EAAA,GAxD5BnD,YAAY;AAoFrB,eAAeA,YAAY;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}