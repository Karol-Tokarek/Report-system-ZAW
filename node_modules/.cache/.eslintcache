[{"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\index.js":"1","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\App.js":"2","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\reportWebVitals.js":"3","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Form.js":"4","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Help.js":"5","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Main.js":"6","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Panel.js":"7","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\ContactEmail.js":"8"},{"size":627,"mtime":1679651162670,"results":"9","hashOfConfig":"10"},{"size":1090,"mtime":1682073606825,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1677222310850,"results":"12","hashOfConfig":"10"},{"size":6935,"mtime":1681472302278,"results":"13","hashOfConfig":"10"},{"size":10827,"mtime":1682632096450,"results":"14","hashOfConfig":"10"},{"size":1458,"mtime":1682073621953,"results":"15","hashOfConfig":"10"},{"size":256,"mtime":1677843689004,"results":"16","hashOfConfig":"10"},{"size":2640,"mtime":1682632397244,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"fq3yjj",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"21"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\index.js",[],[],[],"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\App.js",["46"],[],"// import logo from './banner.png';\nimport {\n  Routes,\n  Route,\n} from 'react-router-dom';\nimport Form from \"./pages/Form.js\";\nimport Help from \"./pages/Help.js\";\nimport Main from \"./pages/Main.js\";\nimport Panel from \"./pages/Panel.js\";\nimport Email from \"./pages/ContactEmail.js\";\n\n\n// let tasks = require('./tasks.json');\n\n// function AppRoutes() {\n//   const routes = useRoutes(\n//     [\n//       {path:'/',element:<Main/>},\n//       {path:'/form',element:<Form/>},\n//       {path:'/help',element:<Help/>}\n\n//     ]\n//   )\n//   return routes;\n// }\nfunction listTasks()\n{\n  // let lst = '';\n  // for( let [key, value] of Object.entries(tasks))\n  // {\n  //     console.log(key + \" : \"+value);\n  //     lst.push('<li><a href=\"#${key}\">${value}</a></li>');\n\n  // }\n  // return lst;\n\n}\n\n\nfunction App() {\n  return (\n    <Routes>\n<Route path=\"/\" element={<Main/>} />\n<Route path=\"/form/:id?/:unit?/:name?\" element={<Form/>} />\n<Route path=\"/help\" element={<Help/>} />\n<Route path=\"/panel\" element={<Panel/>} />\n<Route path=\"/email\" element={<Email/>} />\n\n\n</Routes>\n  )\n}\n\nexport default App;\n","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\reportWebVitals.js",[],[],"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Form.js",["47","48","49","50","51","52","53","54","55","56","57","58","59"],[],"import React from 'react';\r\nimport '../App.css';\r\nimport logo from '../banner.png';\r\nimport {  useLocation } from 'react-router-dom';\r\nimport {  useParams } from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useFormik } from 'formik';\r\nimport { saveAs } from 'file-saver';\r\n// import SaveButton from './SaveFile';\r\nimport axios from 'axios';\r\nfunction Form() {\r\n  const handleSaveClick = () => {\r\n    const data = formik.values;\r\n    const json = JSON.stringify(data);\r\n    const fileName = 'file.json';\r\n    // const fileName2 = '../public/file.json';\r\n\r\n    const filePath = `/${fileName}`;\r\n  \r\n    const a = document.createElement('a');\r\n    a.href = URL.createObjectURL(new Blob([json], {type: 'application/json'}));\r\n    a.download = fileName;\r\n    a.click();\r\n    // const file = new Blob([json], { type: 'application/json' });\r\n    // saveAs(file, fileName2);\r\n  };\r\n  // const { register, handleSubmit, watch, errors } = useForm();\r\n  const onSubmit = data => { console.log(data) };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      imie: '',\r\n      nazwisko: '',\r\n      klasa: '4PT5',\r\n      email: '',\r\n      emailInny: '',\r\n      trescZaswiadczenia: '',\r\n      srednia: '',\r\n      opisSprawy: '',\r\n      file:'',\r\n      tematMsg: '',\r\n\r\n    },\r\n    onSubmit: values => {\r\n\r\n      console.log(values);\r\n      fetch('http://localhost:3001/dataToForm', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          imie: formik.values.imie,\r\n          nazwisko: formik.values.nazwisko,\r\n          klasa: formik.values.klasa,\r\n          email: formik.values.email,\r\n          emailInny: formik.values.email,\r\n          trescZaswiadczenia: formik.values.trescZaswiadczenia,\r\n          srednia: formik.values.srednia,\r\n          opisSprawy: formik.values.opisSprawy,\r\n          file: formik.values.file,\r\n          tematMsg: formik.values.tematMsg,\r\n\r\n        })\r\n      })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('Dane zostały zapisane!');\r\n            console.log(JSON.stringify({\r\n              imie: formik.values.imie,\r\n              nazwisko: formik.values.nazwisko,\r\n              klasa: formik.values.klasa,\r\n              email: formik.values.emailInny,\r\n              trescZaswiadczenia: formik.values.trescZaswiadczenia,\r\n              srednia: formik.values.srednia,\r\n              opisSprawy: formik.values.opisSprawy,\r\n              file: formik.values.file,\r\n              tematMsg: formik.values.tematMsg,\r\n    \r\n            }));\r\n            window.location.reload();\r\n\r\n          } else {\r\n            throw new Error('Błąd zapisywania danych');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    \r\n  });\r\n  // this.state = {value: 'Wartosc imienia'};\r\n// this.handleChange =\r\n// this.doChange.bind(target.value);\r\n// this.handleSubmit =\r\n// this.doSubmit.bind(target.value);\r\n\r\n\r\n\r\nconst loc = useLocation();\r\nconst { id } = useParams();\r\nconst { idx, unit, name } = useParams();\r\nconst [cnt, setCountER] = useState(0);\r\nconst [formType, setFormType] = useState('');\r\n\r\n\r\n\r\nlet formContent = null;\r\n   if (id === '2') {\r\n    formContent = (\r\n      <div>\r\n        <label>Email:</label>\r\n        <input type='text'  onChange={formik.handleChange}\r\n        value={formik.values.email}         name=\"email\"\r\n        />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n  if (id === '3') {\r\n    formContent = (\r\n      <div>\r\n      <label>Email(inny niz zsegw.pl):</label>\r\n      <input type='text'  onChange={formik.handleChange}\r\n        value={formik.values.emailInny}        name=\"emailInny\"\r\n        />\r\n    </div>\r\n    );\r\n  }\r\n  if (id === '4') {\r\n    formContent = (\r\n      <div>\r\n      <label>Tresc zaswiadczenia:</label><br />\r\n      <textarea type='text'   onChange={formik.handleChange}\r\n        value={formik.values.trescZaswiadczenia}         name=\"trescZaswiadczenia\"\r\n        />\r\n    </div>\r\n    );\r\n  }\r\n\r\n  if (id === '5') {\r\n    formContent = (\r\n      <div>\r\n      <label>Srednia:</label><br />\r\n      <input type='number' min=\"1\" max=\"6\"   onChange={formik.handleChange}\r\n        value={formik.values.srednia}        name=\"srednia\"\r\n        />\r\n    </div>\r\n    );\r\n  }\r\n\r\n  if (id === '6') {\r\n    formContent = (\r\n      <div>\r\n      <label>  temat wiadomości\r\n</label>\r\n<input type='text'   onChange={formik.handleChange}\r\n        value={formik.values.tematMsg}        name=\"tematMsg\"\r\n        />\r\n<br />\r\n\r\n<label> \r\npole opisu sprawy [TEXTAREA]\r\n:</label>\r\n<br/>\r\n<textarea type='text' onChange={formik.handleChange}\r\n        value={formik.values.opisSprawy}        name=\"opisSprawy\"\r\n        />\r\n<br />\r\n\r\n<label>  \r\n  <br/>\r\npole załącznika [FILE]:</label>\r\n<input type='file' onChange={formik.handleChange}\r\n        value={formik.values.file}         name=\"file\"\r\n        />\r\n<br />\r\n    </div>\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='Form'>\r\n      <header className='App-header'>\r\n      <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n\r\n        {/* <p>com.Form</p>\r\n        <p>Case ID: {id}</p>\r\n        <p>Case URL: {loc.pathname}</p>\r\n        <p>\r\n          Test params: {idx} Klasa {unit} Name {name}\r\n        </p>\r\n        <p>Proba przeslania from: {cnt}</p> */}\r\n{/*         \r\n        <form method='post' action='' onSubmit={handleFormSubmit}>\r\n          <label>Imie</label>\r\n          <input type='text' value={imie} onChange={(e) => setImie(e.target.value)}/>\r\n          <br />\r\n          <br />\r\n          <label>Nazwisko</label>\r\n          <input type='text' value={nazwisko} onChange={(e) => setNazwisko(e.target.value)}/>\r\n          <br />\r\n          <br />\r\n         \r\n\r\n        </form> */}\r\n        <h2> Formularz id nr {id}</h2>\r\n       <form onSubmit={formik.handleSubmit}>\r\n      <label htmlFor=\"imie\">Imie</label>\r\n      <input\r\n        name=\"imie\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.imie}\r\n      />\r\n\r\n      <label htmlFor=\"nazwisko\">Nazwisko</label>\r\n      <input\r\n        id=\"nazwisko\"\r\n        name=\"nazwisko\"\r\n        type=\"text\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.nazwisko}\r\n      />\r\n          {formContent}\r\n\r\n          <label>Klasa</label>\r\n          <select onChange={formik.handleChange}\r\n        value={formik.values.klasa}>\r\n            <option value='4PT5'>4PT5</option>\r\n            <option value='4DT5'>4DT5</option>\r\n            <option value='4ET5'>4ET5</option>\r\n          </select>\r\n        <br />\r\n      <button type=\"submit\">Submit</button>\r\n      <button onClick={handleSaveClick}>ZAPISZ DO PLIKU JSON</button>\r\n\r\n      {/* <SaveButton /> */}\r\n    </form>\r\n        {/* <button onClick={() => setCountER(cnt + 1)}>+</button> */}\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;","C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Help.js",["60","61"],[],"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Main.js",[],[],"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\Panel.js",[],[],"C:\\Users\\karol\\Documents\\REACT-APP\\rep-sys\\src\\pages\\ContactEmail.js",["62","63","64","65","66","67","68","69","70","71","72","73","74"],[],"import React from 'react';\r\nimport '../App.css';\r\nimport logo from '../banner.png';\r\nimport {  useLocation } from 'react-router-dom';\r\nimport {  useParams } from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport { useForm } from 'react-hook-form'\r\nimport { useFormik } from 'formik';\r\nimport { saveAs } from 'file-saver';\r\n// import SaveButton from './SaveFile';\r\n\r\nfunction EmailContent() {\r\n\r\n    const onSubmit = data => { console.log(data) };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      emailNadawcy: '',\r\n      emailOdbiorcy: '',\r\n      tresc:'',\r\n   \r\n    },\r\n    onSubmit: values => {\r\n\r\n      console.log(values);\r\n      fetch('http://localhost:3001/emailSend', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({        \r\n            emailNadawcy: values.emailNadawcy,\r\n            emailOdbiorcy: values.emailOdbiorcy,\r\n            tresc: values.tresc })\r\n      })\r\n        .then(response => {\r\n          if (response.ok) {\r\n            console.log('Dane zostały wyslane!');\r\n            console.log(JSON.stringify({\r\n                emailNadawcy: formik.values.emailNadawcy,\r\n                emailOdbiorcy: formik.values.emailOdbiorcy,\r\n                tresc: formik.values.tresc,\r\n        \r\n    \r\n            }));\r\n            window.location.reload();\r\n\r\n            // window.location.reload();\r\n\r\n          } else {\r\n            throw new Error('Błąd zapisywania danych');\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error(error);\r\n        });\r\n    },\r\n    \r\n  });\r\n  // this.state = {value: 'Wartosc imienia'};\r\n// this.handleChange =\r\n// this.doChange.bind(target.value);\r\n// this.handleSubmit =\r\n// this.doSubmit.bind(target.value);\r\n\r\n\r\n\r\nconst loc = useLocation();\r\nconst { id } = useParams();\r\nconst { idx, unit, name } = useParams();\r\nconst [cnt, setCountER] = useState(0);\r\nconst [formType, setFormType] = useState('');\r\n\r\nconst txt = \"\";\r\n\r\n  return (\r\n    <div>\r\n        \r\n        <header class=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" /><br/><br/>\r\n        <h2> Wyslij email: </h2>\r\n    <form onSubmit={formik.handleSubmit}>\r\n<label>Email odbiorcy</label>\r\n<input type='email' name='emailOdbiorcy' onChange={formik.handleChange}\r\n        value={formik.values.emailOdbiorcy}/>\r\n<label>Tresc wiadomosci</label><br/>\r\n<textarea name='tresc' onChange={formik.handleChange}\r\n        value={formik.values.tresc}></textarea>\r\n<br/><button type=\"submit\">Submit</button>\r\n\r\n</form>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmailContent;",{"ruleId":"75","severity":1,"message":"76","line":26,"column":10,"nodeType":"77","messageId":"78","endLine":26,"endColumn":19},{"ruleId":"75","severity":1,"message":"79","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":17},{"ruleId":"75","severity":1,"message":"80","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":16},{"ruleId":"75","severity":1,"message":"81","line":11,"column":8,"nodeType":"77","messageId":"78","endLine":11,"endColumn":13},{"ruleId":"75","severity":1,"message":"82","line":19,"column":11,"nodeType":"77","messageId":"78","endLine":19,"endColumn":19},{"ruleId":"75","severity":1,"message":"83","line":29,"column":9,"nodeType":"77","messageId":"78","endLine":29,"endColumn":17},{"ruleId":"75","severity":1,"message":"84","line":101,"column":7,"nodeType":"77","messageId":"78","endLine":101,"endColumn":10},{"ruleId":"75","severity":1,"message":"85","line":103,"column":9,"nodeType":"77","messageId":"78","endLine":103,"endColumn":12},{"ruleId":"75","severity":1,"message":"86","line":103,"column":14,"nodeType":"77","messageId":"78","endLine":103,"endColumn":18},{"ruleId":"75","severity":1,"message":"87","line":103,"column":20,"nodeType":"77","messageId":"78","endLine":103,"endColumn":24},{"ruleId":"75","severity":1,"message":"88","line":104,"column":8,"nodeType":"77","messageId":"78","endLine":104,"endColumn":11},{"ruleId":"75","severity":1,"message":"89","line":104,"column":13,"nodeType":"77","messageId":"78","endLine":104,"endColumn":23},{"ruleId":"75","severity":1,"message":"90","line":105,"column":8,"nodeType":"77","messageId":"78","endLine":105,"endColumn":16},{"ruleId":"75","severity":1,"message":"91","line":105,"column":18,"nodeType":"77","messageId":"78","endLine":105,"endColumn":29},{"ruleId":"75","severity":1,"message":"92","line":2,"column":17,"nodeType":"77","messageId":"78","endLine":2,"endColumn":25},{"ruleId":"75","severity":1,"message":"93","line":2,"column":27,"nodeType":"77","messageId":"78","endLine":2,"endColumn":36},{"ruleId":"75","severity":1,"message":"79","line":7,"column":10,"nodeType":"77","messageId":"78","endLine":7,"endColumn":17},{"ruleId":"75","severity":1,"message":"80","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":16},{"ruleId":"75","severity":1,"message":"83","line":14,"column":11,"nodeType":"77","messageId":"78","endLine":14,"endColumn":19},{"ruleId":"75","severity":1,"message":"84","line":67,"column":7,"nodeType":"77","messageId":"78","endLine":67,"endColumn":10},{"ruleId":"75","severity":1,"message":"94","line":68,"column":9,"nodeType":"77","messageId":"78","endLine":68,"endColumn":11},{"ruleId":"75","severity":1,"message":"85","line":69,"column":9,"nodeType":"77","messageId":"78","endLine":69,"endColumn":12},{"ruleId":"75","severity":1,"message":"86","line":69,"column":14,"nodeType":"77","messageId":"78","endLine":69,"endColumn":18},{"ruleId":"75","severity":1,"message":"87","line":69,"column":20,"nodeType":"77","messageId":"78","endLine":69,"endColumn":24},{"ruleId":"75","severity":1,"message":"88","line":70,"column":8,"nodeType":"77","messageId":"78","endLine":70,"endColumn":11},{"ruleId":"75","severity":1,"message":"89","line":70,"column":13,"nodeType":"77","messageId":"78","endLine":70,"endColumn":23},{"ruleId":"75","severity":1,"message":"90","line":71,"column":8,"nodeType":"77","messageId":"78","endLine":71,"endColumn":16},{"ruleId":"75","severity":1,"message":"91","line":71,"column":18,"nodeType":"77","messageId":"78","endLine":71,"endColumn":29},{"ruleId":"75","severity":1,"message":"95","line":73,"column":7,"nodeType":"77","messageId":"78","endLine":73,"endColumn":10},"no-unused-vars","'listTasks' is defined but never used.","Identifier","unusedVar","'useForm' is defined but never used.","'saveAs' is defined but never used.","'axios' is defined but never used.","'filePath' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'loc' is assigned a value but never used.","'idx' is assigned a value but never used.","'unit' is assigned a value but never used.","'name' is assigned a value but never used.","'cnt' is assigned a value but never used.","'setCountER' is assigned a value but never used.","'formType' is assigned a value but never used.","'setFormType' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'id' is assigned a value but never used.","'txt' is assigned a value but never used."]